---
- name: Configure systemd system.conf
  vars:
    systemd_conf: '{{ systemd_conf_default|combine(systemd_conf_role) }}'
  ini_file:
    path: '/etc/systemd/system.conf'
    no_extra_spaces: yes
    section: "{{ item.key.split('.',1)[0] }}"
    option:  "{{ item.key.split('.',1)[1] }}"
    value:   "{{ (item.value is string)|ternary(item.value,omit) }}"
    state:   "{{ (item.value is string)|ternary('present','absent') }}"
  with_dict: '{{ systemd_conf }}'

- name: Configure journald.conf
  vars:
    journald_conf: '{{ journald_conf_default|combine(journald_conf_role) }}'
  ini_file:
    path: '/etc/systemd/journald.conf'
    no_extra_spaces: yes
    section: "{{ item.key.split('.',1)[0] }}"
    option:  "{{ item.key.split('.',1)[1] }}"
    value:   "{{ (item.value is string)|ternary(item.value,omit) }}"
    state:   "{{ (item.value is string)|ternary('present','absent') }}"
  with_dict: '{{ journald_conf }}'

- name: Configure sleep.conf
  vars:
    sleep_conf: '{{ sleep_conf_default|combine(sleep_conf_role) }}'
  ini_file:
    path: '/etc/systemd/sleep.conf'
    no_extra_spaces: yes
    section: "{{ item.key.split('.',1)[0] }}"
    option:  "{{ item.key.split('.',1)[1] }}"
    value:   "{{ (item.value is string)|ternary(item.value,omit) }}"
    state:   "{{ (item.value is string)|ternary('present','absent') }}"
  with_dict: '{{ sleep_conf }}'

- name: Configure logind.conf
  vars:
    logind_conf: '{{ logind_conf_default|combine(logind_conf_role) }}'
  ini_file:
    path: '/etc/systemd/logind.conf'
    no_extra_spaces: yes
    section: "{{ item.key.split('.',1)[0] }}"
    option:  "{{ item.key.split('.',1)[1] }}"
    value:   "{{ (item.value is string)|ternary(item.value,omit) }}"
    state:   "{{ (item.value is string)|ternary('present','absent') }}"
  with_dict: '{{ logind_conf }}'

- name: Configure user.conf
  vars:
    user_conf: '{{ user_conf_default|combine(user_conf_role) }}'
  ini_file:
    path: '/etc/systemd/user.conf'
    no_extra_spaces: yes
    section: "{{ item.key.split('.',1)[0] }}"
    option:  "{{ item.key.split('.',1)[1] }}"
    value:   "{{ (item.value is string)|ternary(item.value,omit) }}"
    state:   "{{ (item.value is string)|ternary('present','absent') }}"
  with_dict: '{{ user_conf }}'

# vim: set ts=2 sw=2 et:
